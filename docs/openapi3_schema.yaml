openapi: 3.0.3
info:
  title: Squad Admin Configurator
  version: 1.7.0
  description: Панель управления привилегированными пользователями в Squad
paths:
  /v1/api/privileged/permissions/:
    get:
      operationId: v1_api_privileged_permissions_list
      description: View set для доступа к списку разрешений
      parameters:
      - in: query
        name: description
        schema:
          type: string
      - in: query
        name: description__icontains
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: title
        schema:
          type: string
      - in: query
        name: title__icontains
        schema:
          type: string
      tags:
      - v1
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPermissionList'
          description: ''
    post:
      operationId: v1_api_privileged_permissions_create
      description: View set для доступа к списку разрешений
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permission'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Permission'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Permission'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
          description: ''
  /v1/api/privileged/permissions/{id}/:
    get:
      operationId: v1_api_privileged_permissions_retrieve
      description: View set для доступа к списку разрешений
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Разрешение.
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
          description: ''
    put:
      operationId: v1_api_privileged_permissions_update
      description: View set для доступа к списку разрешений
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Разрешение.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permission'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Permission'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Permission'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
          description: ''
    patch:
      operationId: v1_api_privileged_permissions_partial_update
      description: View set для доступа к списку разрешений
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Разрешение.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPermission'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPermission'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPermission'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
          description: ''
    delete:
      operationId: v1_api_privileged_permissions_destroy
      description: View set для доступа к списку разрешений
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Разрешение.
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /v1/api/privileged/privileges/:
    get:
      operationId: v1_api_privileged_privileges_list
      description: View set для доступа к привилегированным пользователям
      parameters:
      - in: query
        name: description
        schema:
          type: string
        description: Описание
      - in: query
        name: is_active
        schema:
          type: boolean
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
        description: Имя
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: steam_id
        schema:
          type: integer
      tags:
      - v1
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPrivilegedList'
          description: ''
    post:
      operationId: v1_api_privileged_privileges_create
      description: View set для доступа к привилегированным пользователям
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Privileged'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Privileged'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Privileged'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Privileged'
          description: ''
  /v1/api/privileged/privileges/{id}/:
    get:
      operationId: v1_api_privileged_privileges_retrieve
      description: View set для доступа к привилегированным пользователям
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Пользователь.
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Privileged'
          description: ''
    put:
      operationId: v1_api_privileged_privileges_update
      description: View set для доступа к привилегированным пользователям
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Пользователь.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Privileged'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Privileged'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Privileged'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Privileged'
          description: ''
    patch:
      operationId: v1_api_privileged_privileges_partial_update
      description: View set для доступа к привилегированным пользователям
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Пользователь.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPrivileged'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPrivileged'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPrivileged'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Privileged'
          description: ''
    delete:
      operationId: v1_api_privileged_privileges_destroy
      description: View set для доступа к привилегированным пользователям
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Пользователь.
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /v1/api/privileged/role_webhook/{url}/:
    post:
      operationId: v1_api_privileged_role_webhook_create
      description: Добавление новых ролей пользователям при вызове вебхука post запросом
      parameters:
      - in: path
        name: url
        schema:
          type: string
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleWebhook'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RoleWebhook'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RoleWebhook'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
                format: json-pointer
              examples:
                Пример:
                  value:
                    detail: created
          description: Создано
        '403':
          content:
            application/json:
              schema:
                type: string
                format: json-pointer
          description: Вебхук не активен
        '404':
          content:
            application/json:
              schema:
                type: string
                format: json-pointer
          description: Вебхук не найден
  /v1/api/privileged/roles/:
    get:
      operationId: v1_api_privileged_roles_list
      description: View set для доступа к списку ролей
      parameters:
      - in: query
        name: is_active
        schema:
          type: boolean
        description: Активирована ли роль
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: permission
        schema:
          type: string
        description: Названия разрешений
      - in: query
        name: privileged
        schema:
          type: integer
        description: ID пользователя
      - in: query
        name: privileged_steam_id
        schema:
          type: integer
        description: Steam ID пользователя у которого есть связь с ролью
      - in: query
        name: title
        schema:
          type: string
        description: Название роли
      tags:
      - v1
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRoleList'
          description: ''
    post:
      operationId: v1_api_privileged_roles_create
      description: View set для доступа к списку ролей
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleSerializerWrite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RoleSerializerWrite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RoleSerializerWrite'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleSerializerWrite'
          description: ''
  /v1/api/privileged/roles/{id}/:
    get:
      operationId: v1_api_privileged_roles_retrieve
      description: View set для доступа к списку ролей
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Роль.
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
    put:
      operationId: v1_api_privileged_roles_update
      description: View set для доступа к списку ролей
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Роль.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleSerializerWrite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RoleSerializerWrite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RoleSerializerWrite'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleSerializerWrite'
          description: ''
    patch:
      operationId: v1_api_privileged_roles_partial_update
      description: View set для доступа к списку ролей
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Роль.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRoleSerializerWrite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRoleSerializerWrite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRoleSerializerWrite'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleSerializerWrite'
          description: ''
    delete:
      operationId: v1_api_privileged_roles_destroy
      description: View set для доступа к списку ролей
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Роль.
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /v1/api/privileged/server_config/{url}/:
    get:
      operationId: v1_api_privileged_server_config_retrieve
      description: |-
        Получение конфигурации администраторов игрового сервера по get запросу
        с определенным постфиксом
      parameters:
      - in: path
        name: url
        schema:
          type: string
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            text/plain;charset=UTF-8:
              schema:
                type: string
          description: Текст конфига сервера
        '404':
          content:
            application/json:
              schema:
                type: string
                format: json-pointer
          description: Сервер не найден
        '403':
          content:
            application/json:
              schema:
                type: string
                format: json-pointer
          description: Сервер не активен
  /v1/api/privileged/servers/:
    get:
      operationId: v1_api_privileged_servers_list
      description: View set для доступа к списку серверов
      parameters:
      - in: query
        name: description
        schema:
          type: string
      - in: query
        name: is_active
        schema:
          type: boolean
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: privileged_name
        schema:
          type: string
      - in: query
        name: privileged_steam_id
        schema:
          type: integer
      - in: query
        name: title
        schema:
          type: string
      tags:
      - v1
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedServerList'
          description: ''
    post:
      operationId: v1_api_privileged_servers_create
      description: View set для доступа к списку серверов
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Server'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Server'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Server'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
          description: ''
  /v1/api/privileged/servers/{id}/:
    get:
      operationId: v1_api_privileged_servers_retrieve
      description: View set для доступа к списку серверов
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Сервер.
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
          description: ''
    put:
      operationId: v1_api_privileged_servers_update
      description: View set для доступа к списку серверов
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Сервер.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Server'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Server'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Server'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
          description: ''
    patch:
      operationId: v1_api_privileged_servers_partial_update
      description: View set для доступа к списку серверов
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Сервер.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedServer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedServer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedServer'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
          description: ''
    delete:
      operationId: v1_api_privileged_servers_destroy
      description: View set для доступа к списку серверов
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Сервер.
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /v1/api/privileged/servers_privileges/:
    get:
      operationId: v1_api_privileged_servers_privileges_list
      description: View set для доступа к привилегированным пользователям на серверах
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: privileged
        schema:
          type: integer
      - in: query
        name: privileged_is_active
        schema:
          type: boolean
        description: Активирован ли пользователь
      - in: query
        name: privileged_steam_id
        schema:
          type: integer
        description: Steam ID пользователя
      - in: query
        name: roles
        schema:
          type: array
          items:
            type: integer
        description: Несколько значений могут быть разделены запятыми.
        explode: false
        style: form
      - in: query
        name: server
        schema:
          type: integer
      - in: query
        name: server_is_active
        schema:
          type: boolean
        description: Активирован ли сервер
      - in: query
        name: server_title
        schema:
          type: string
        description: Название сервера
      tags:
      - v1
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedServerPrivilegedList'
          description: ''
    post:
      operationId: v1_api_privileged_servers_privileges_create
      description: View set для доступа к привилегированным пользователям на серверах
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerPrivilegedSerializerWrite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServerPrivilegedSerializerWrite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServerPrivilegedSerializerWrite'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerPrivilegedSerializerWrite'
          description: ''
  /v1/api/privileged/servers_privileges/{id}/:
    get:
      operationId: v1_api_privileged_servers_privileges_retrieve
      description: View set для доступа к привилегированным пользователям на серверах
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Роль на сервере.
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerPrivileged'
          description: ''
    put:
      operationId: v1_api_privileged_servers_privileges_update
      description: View set для доступа к привилегированным пользователям на серверах
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Роль на сервере.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerPrivilegedSerializerWrite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServerPrivilegedSerializerWrite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServerPrivilegedSerializerWrite'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerPrivilegedSerializerWrite'
          description: ''
    patch:
      operationId: v1_api_privileged_servers_privileges_partial_update
      description: View set для доступа к привилегированным пользователям на серверах
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Роль на сервере.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedServerPrivilegedSerializerWrite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedServerPrivilegedSerializerWrite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedServerPrivilegedSerializerWrite'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerPrivilegedSerializerWrite'
          description: ''
    delete:
      operationId: v1_api_privileged_servers_privileges_destroy
      description: View set для доступа к привилегированным пользователям на серверах
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Роль на сервере.
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /v1/api/privileged/webhook/:
    get:
      operationId: v1_api_privileged_webhook_list
      description: View set только на чтение для доступа к логам вебхуков
      parameters:
      - in: query
        name: level
        schema:
          type: string
          title: Уровень логирования
          enum:
          - error
          - info
          - warning
        description: |-
          * `info` - Информация
          * `warning` - Предупреждение
          * `error` - Ошибка
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - v1
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWebhookLogList'
          description: ''
  /v1/api/privileged/webhook/{id}/:
    get:
      operationId: v1_api_privileged_webhook_retrieve
      description: View set только на чтение для доступа к логам вебхуков
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Лог вебхука.
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookLog'
          description: ''
  /v1/api/rotations/{url}/current/:
    get:
      operationId: v1_api_rotations_current_retrieve
      description: Получение текущего списка карт
      parameters:
      - in: path
        name: url
        schema:
          type: string
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            text/plain;charset=UTF-8:
              schema:
                type: string
          description: Текст ротации
        '404':
          content:
            application/json:
              schema:
                type: string
                format: json-pointer
          description: Ротация не найдена
        '403':
          content:
            application/json:
              schema:
                type: string
                format: json-pointer
          description: Ротация не активна
  /v1/api/rotations/{url}/next/:
    get:
      operationId: v1_api_rotations_next_retrieve
      description: Получение следующего в очереди списка карт
      parameters:
      - in: path
        name: url
        schema:
          type: string
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            text/plain;charset=UTF-8:
              schema:
                type: string
          description: Текст ротации
        '404':
          content:
            application/json:
              schema:
                type: string
                format: json-pointer
          description: Ротация не найдена
        '403':
          content:
            application/json:
              schema:
                type: string
                format: json-pointer
          description: Ротация не активна
components:
  schemas:
    LevelEnum:
      enum:
      - info
      - warning
      - error
      type: string
      description: |-
        * `info` - Информация
        * `warning` - Предупреждение
        * `error` - Ошибка
    PaginatedPermissionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
    PaginatedPrivilegedList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Privileged'
    PaginatedRoleList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Role'
    PaginatedServerList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Server'
    PaginatedServerPrivilegedList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ServerPrivileged'
    PaginatedWebhookLogList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/WebhookLog'
    PatchedPermission:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: Название
          maxLength: 100
        description:
          type: string
          title: Описание
          maxLength: 300
    PatchedPrivileged:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Имя
          maxLength: 200
        steam_id:
          type: integer
        is_active:
          type: boolean
          title: Активирован
        description:
          type: string
          title: Описание
        creation_date:
          type: string
          format: date-time
          readOnly: true
          title: Дата добавления
        date_of_end:
          type: string
          format: date-time
          nullable: true
          title: Общая дата окончания полномочий
    PatchedRoleSerializerWrite:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        permissions:
          type: array
          items:
            type: integer
            nullable: true
        title:
          type: string
          title: Название
          maxLength: 200
        is_active:
          type: boolean
          title: Активирован
        description:
          type: string
          title: Описание
          maxLength: 300
    PatchedServer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        is_active:
          type: boolean
          title: Активирован
        title:
          type: string
          title: Название
          maxLength: 50
        description:
          type: string
          title: Описание
          maxLength: 300
    PatchedServerPrivilegedSerializerWrite:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        roles:
          type: array
          items:
            type: integer
            nullable: true
        server:
          type: integer
        is_active:
          type: boolean
          title: Активирована
        creation_date:
          type: string
          format: date-time
          readOnly: true
          title: Дата добавления
        date_of_end:
          type: string
          format: date-time
          nullable: true
          title: Дата окончания роли
        comment:
          type: string
          title: Комментарий
          maxLength: 200
        privileged:
          type: integer
          title: Пользователь
    Permission:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: Название
          maxLength: 100
        description:
          type: string
          title: Описание
          maxLength: 300
      required:
      - id
      - title
    Privileged:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Имя
          maxLength: 200
        steam_id:
          type: integer
        is_active:
          type: boolean
          title: Активирован
        description:
          type: string
          title: Описание
        creation_date:
          type: string
          format: date-time
          readOnly: true
          title: Дата добавления
        date_of_end:
          type: string
          format: date-time
          nullable: true
          title: Общая дата окончания полномочий
      required:
      - creation_date
      - id
      - name
      - steam_id
    Role:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: Название
          maxLength: 200
        is_active:
          type: boolean
          title: Активирован
        description:
          type: string
          title: Описание
          maxLength: 300
      required:
      - id
      - title
    RoleSerializerWrite:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        permissions:
          type: array
          items:
            type: integer
            nullable: true
        title:
          type: string
          title: Название
          maxLength: 200
        is_active:
          type: boolean
          title: Активирован
        description:
          type: string
          title: Описание
          maxLength: 300
      required:
      - id
      - permissions
      - title
    RoleWebhook:
      type: object
      properties:
        steam_id:
          type: integer
        name:
          type: string
          maxLength: 200
        duration_until_end:
          type: integer
        comment:
          type: string
          maxLength: 200
      required:
      - comment
      - name
      - steam_id
    Server:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        is_active:
          type: boolean
          title: Активирован
        title:
          type: string
          title: Название
          maxLength: 50
        description:
          type: string
          title: Описание
          maxLength: 300
      required:
      - id
      - title
    ServerPrivileged:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        is_active:
          type: boolean
          title: Активирована
        creation_date:
          type: string
          format: date-time
          readOnly: true
          title: Дата добавления
        date_of_end:
          type: string
          format: date-time
          nullable: true
          title: Дата окончания роли
        comment:
          type: string
          title: Комментарий
          maxLength: 200
        server:
          type: integer
          title: Сервер
        privileged:
          type: integer
          title: Пользователь
        roles:
          type: array
          items:
            type: integer
            title: Роль
          title: Роль
      required:
      - creation_date
      - id
      - privileged
      - roles
      - server
    ServerPrivilegedSerializerWrite:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        roles:
          type: array
          items:
            type: integer
            nullable: true
        server:
          type: integer
        is_active:
          type: boolean
          title: Активирована
        creation_date:
          type: string
          format: date-time
          readOnly: true
          title: Дата добавления
        date_of_end:
          type: string
          format: date-time
          nullable: true
          title: Дата окончания роли
        comment:
          type: string
          title: Комментарий
          maxLength: 200
        privileged:
          type: integer
          title: Пользователь
      required:
      - creation_date
      - id
      - privileged
      - roles
      - server
    WebhookLog:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        message:
          type: string
          title: Лог сообщений
        request_info:
          type: string
          title: Сведения о запросе
        webhook_info:
          type: string
          title: Сведения о вебхуке
        level:
          allOf:
          - $ref: '#/components/schemas/LevelEnum'
          title: Уровень логирования
        creation_date:
          type: string
          format: date-time
          readOnly: true
          title: Дата создания сообщения
        object_id:
          type: integer
          title: ID вебхука
        content_type:
          type: integer
          nullable: true
          title: Модель вебхука
      required:
      - creation_date
      - id
      - level
      - message
      - object_id
      - webhook_info
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
